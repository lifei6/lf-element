import{_ as a,c as e,o as t,a2 as i}from"./chunks/framework.BmV95l8e.js";const b=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"introduction.md","filePath":"introduction.md"}'),l={name:"introduction.md"},r=i('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>这是一个自己创建的组件库，模仿了 Element Plus 的编写方式</p><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h2><h3 id="构建工具" tabindex="-1">构建工具 <a class="header-anchor" href="#构建工具" aria-label="Permalink to &quot;构建工具&quot;">​</a></h3><ul><li>Vite</li><li>Vue3</li><li>TypeScript</li></ul><h3 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h3><ul><li>Css</li></ul><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h3><ul><li>Vitest 下一代测试框架</li><li>Vue Test Utils Vue 官方提供的测试工具库 Vue Test Utils (VTU) 是一组实用函数，旨在简化 Vue.js 组件的测试。它提供了一些以隔离方式挂载 Vue 组件并与之交互的方法。</li></ul><h3 id="代码检查" tabindex="-1">代码检查 <a class="header-anchor" href="#代码检查" aria-label="Permalink to &quot;代码检查&quot;">​</a></h3><ul><li>ESLint</li><li>Prettier</li></ul><h3 id="站点生成" tabindex="-1">站点生成 <a class="header-anchor" href="#站点生成" aria-label="Permalink to &quot;站点生成&quot;">​</a></h3><ul><li>VitePress 静态站点生成器（SSG）,可以以 markdown 文件的形式来编写文档,并生成可以轻松部署到任何地方的静态 HTML 页面。</li></ul><h3 id="自动部署" tabindex="-1">自动部署 <a class="header-anchor" href="#自动部署" aria-label="Permalink to &quot;自动部署&quot;">​</a></h3><ul><li>Github Actions</li></ul>',15),o=[r];function n(s,h,u,d,c,_){return t(),e("div",null,o)}const f=a(l,[["render",n]]);export{b as __pageData,f as default};
